
name: Deploy to Amazon EC2

on:
  # main branch에 대한 push 나 pull request 이벤트를 트리거로 지
  push:
    branches: [ main ]
env:
  S3_BUCKET_NAME: my-git-action-bridge-s3-bucket
  AWS_REGION: ap-northeast-2
  CODE_DEPLOY_APPLICATION_NAME: my-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: my-codedeploy-deplotment-group-bridge

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew    

    - name: Create application.yml
      run: |
        cd ./src/main/resources
        touch ./application.yml
        echo "${{ secrets.APPLICATION_YML }}" >> ./application.yml
        cat ./application.yml

    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: "bridge-dbecf-firebase-adminsdk-25cwj-d885e23f45.json"
        json: ${{ secrets.FIREBASE_JSON }}
        dir: './src//main/resources/firebase'
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: clean build -x test

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Upload to S3
      run: |
        aws deploy push \
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
        --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
        --ignore-hidden-files \
        --source .

    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
        --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
